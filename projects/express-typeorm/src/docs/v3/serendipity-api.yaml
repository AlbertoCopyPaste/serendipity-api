openapi: '3.0.0'
info:
  title: Serendipity CRM REST API
  version: 1.0.0
  license:
    name: 'Creative Commons Attribution 3.0 Australia (CC BY 3.0 AU)'
    url: 'https://creativecommons.org/licenses/by/3.0/au/'
  description: |
    # Introduction
    Serendipity's API is built on HTTP. The API is RESTful and it has predictable resource URIs.

    The API is composed of four distinct resource archetypes: document, collection, store, and controller.

    For more information, see: [RESTful API Design Guidelines](https://github.com/Robinyo/restful-api-design-guidelines)

    # Overview
    The following sections describe the resources that comprise Serendipity's REST API.

    ## Current Version
    By default, all requests to http://localhost:3001/api receive the `v1` version of the REST API. We encourage you to explicitly request this version via the `Accept` header.

    ## Schema
    All API access is over HTTP (HTTPS) and accessed from https://localhost:3001/api. All data is sent and received as JSON. Blank fields are included.

      All dates use the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:

        YYYY-MM-DD

      For example: `2017-07-01` (the 1st of July 2017)

      All timestamps use the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:

        YYYY-MM-DDTHH:MM:SSZ

      For example: `2017-07-01T11:05:06+10:00`

    ## Timezones
    Some requests allow for specifying timestamps or generate timestamps with time zone information. We apply the following rules, in order of priority, to determine timezone information for API calls.

    ### Explicitly provide an ISO 8601 timestamp with timezone information
    For API calls that allow for a timestamp to be specified, we use that exact timestamp.

      For example: `2017-07-01T11:05:06+10:00`

    ## Pagination
    Information about pagination is provided in the [Link](https://tools.ietf.org/html/rfc5988#page-6) header.

      For example:

        Link: <https://localhost:3001/api/individuals?page=2>; rel="next",
              <https://localhost:3001/api/individuals?page=34>; rel="last"

    `rel="next"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel="last"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.

    ## Parameters
    Many API methods take optional parameters:

        GET /individuals/1234/addresses/?addressType='Mailing'

    In this example, the '1234' value is provided for the `:partyId` parameter in the path while `:addressType` is passed in the query string.
    For POST, PATCH, PUT, and DELETE requests, parameters not included in the URL should be encoded as JSON with a Content-Type of 'application/json'.

    ## Metadata
    The API provides **metadata services** that you can use to discover information about the classifcation schemes and values used by the application.

      For example:

        GET /classifications/roles

      Sample response:

        [
          {
            "id": 1,
            "role": "Director",
            "roleDescription": "An individual responsible for managing a ...",
            "relationship": "Directorship",
            "reciprocalRole": "Company",
            "reciprocalRoleDescription": "An incorporated legal entity."
          },
          {
            ...
          }
        ]
    ## Root Endpoint
    You can issue a GET request to the root endpoint (also known as the service root) to get all the endpoint categories that the REST API supports:

        curl https://localhost:3001/api
    ## Authentication
    <!-- ReDoc-Inject: <security-definitions> -->
  x-logo:
    url: 'http://localhost:3001/public/images/icons/serendipity-logo.svg'
servers:
  - url: https://localhost:3001/api

components:

  securitySchemes:
    oauth:
      type: oauth2
      description: |
        The API supports:
          - OAuth 2.0

        To access an endpoint a user must have requested and been granted the appropriate scope.

        For example, to access:

            GET /individuals

        The user must have been granted the `individual:read` scope:

            security:
              - oauth: [ individual:read ]
      flows:
        authorizationCode:
          authorizationUrl: /oauth2/authorize
          tokenUrl: /oauth2/access
          scopes:
            classification:read: Read access to the Classification schemes collection
            classification:write: Write access to the Classification schemes collection
            individual:read: Read access to the Individuals collection
            individual:write: Write access to the Individuals collection
            organisation:read: Read access to the Organisations collection
            organisation:write: Write access to the Organisations collection

  schemas:
    address-type:
      allOf:
        - $ref: '#/components/schemas/type'
        - type: object
    business-name-lifecycle-state:
      allOf:
        - $ref: '#/components/schemas/type'
        - type: object
    electronic-address-type:
      allOf:
        - $ref: '#/components/schemas/type'
        - type: object
    gender:
      description: The Gender resource.
      type: object
      properties:
        id:
          description: The resource's unique identifier.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/resourceId'
        gender:
          description: The gender.
          type: string
    legal-entity-type:
      allOf:
        - $ref: '#/components/schemas/type'
        - type: object
    license-lifecycle-state:
      allOf:
        - $ref: '#/components/schemas/type'
        - type: object
    license-type:
      allOf:
        - $ref: '#/components/schemas/type'
        - type: object
    name-direction:
      allOf:
        - $ref: '#/components/schemas/type'
        - type: object
    name-prefix:
      allOf:
        - $ref: '#/components/schemas/type'
        - type: object
    name-type:
      allOf:
        - $ref: '#/components/schemas/type'
        - type: object
    registered-identifier-type:
      allOf:
        - $ref: '#/components/schemas/type'
        - type: object
    role:
      description: The Role Type resource.
      type: object
      properties:
        id:
          description: The resource's unique identifier.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/resourceId'
        role:
          description: The role name.
          type: string
        roleDescription:
          description: The role description.
          type: string
        relationship:
          description: The relationship name.
          type: string
        reciprocalRole:
          description: The reciprocal role name.
          type: string
        reciprocalRoleDescription:
          description: The reciprocal role description.
          type: string
    type:
      description: The Type resource.
      type: object
      properties:
        id:
          description: The resource's unique identifier.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/resourceId'
        name:
          description: The scheme value.
          type: string
        description:
          description: The scheme value description.
          type: string
    address:
      description: The Address resource.
      type: object
      properties:
        id:
          description: The resource's unique identifier.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/addressId'
        name:
          description: The address name.
          type: string
          example: Kembery Building
        line1:
          description: The address line 1.
          type: string
          example: Level 7
        line2:
          description: The address line 2.
          type: string
          example: 21 Genge Street
        line3:
          description: The address line 3.
          type: string
          example: ''
        suburb:
          description: The suburb.
          type: string
          example: Civic
        city:
          description: The city.
          type: string
          example: Canberra
        postalCode:
          description: The postal code.
          type: string
          example: '2601'
        country:
          description: The country.
          type: string
          example: Australia
        fromDate:
          description: 'The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
          readOnly: true
          type: string
          example: '1979-01-13T09:05:06+10:00'
        toDate:
          description: 'The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
          readOnly: true
          type: string
          example: ''
    individual-address:
      allOf:
        - $ref: '#/components/schemas/address'
        - type: object
          properties:
            addressType:
              description: The address type.
              type: string
              default: Principal Place of Residence
              enum:
                - Mailing
                - Principal Place of Business
                - Principal Place of Residence
            fromDate:
              description: 'The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
              readOnly: true
              type: string
              example: '1979-01-13T09:05:06+10:00'
            toDate:
              description: 'The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
              readOnly: true
              type: string
              example: ''
    organisation-address:
      allOf:
        - $ref: '#/components/schemas/address'
        - type: object
          properties:
            addressType:
              description: The address type.
              type: string
              default: Principal Place of Business
              enum:
                - Mailing
                - Principal Place of Business
            fromDate:
              description: 'The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
              readOnly: true
              type: string
              example: '1979-01-13T09:05:06+10:00'
            toDate:
              description: 'The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
              readOnly: true
              type: string
              example: ''
    electronic-address:
      description: The Electronic Address resource.
      type: object
      properties:
        id:
          description: The resource's unique identifier.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/addressId'
        countryPrefix:
          description: 'The country prefix, for example, "61".'
          type: string
          example: '61'
        areaCode:
          description: 'The area code, for example, "02".'
          type: string
          example: '02'
        number:
          description: 'The number, for example, "62164453".'
          type: string
          example: '62164453'
        extension:
          description: 'The extension number, for example, "4453".'
          type: string
          example: ''
        email:
          description: 'The email address, for example, "robert.ferguson@ato.gov.au".'
          type: string
          example: ''
        url:
          description: 'The website address, for example, "https://ato.gov.au".'
          type: string
          example: ''
        electronicAddressType:
          description: The electronic address type.
          type: string
          default: Landline
          enum:
            - Email
            - Fax
            - Landline
            - Mobile
            - Website
        fromDate:
          description: 'The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
          readOnly: true
          type: string
          example: '1979-01-13T09:05:06+10:00'
        toDate:
          description: 'The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
          readOnly: true
          type: string
          example: ''
    individual-name:
      description: The Individual Name resource.
      type: object
      properties:
        id:
          description: The resource's unique identifier.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/resourceId'
        namePrefix:
          description: The individual's name prefix.
          type: string
          default: Mr
          enum:
            - Mr
            - Ms
        givenName:
          description: The individual's given name.
          type: string
          example: Robert
        middleName:
          description: The individual's middle name.
          type: string
          example: James
        familyName:
          description: The individual's family name.
          type: string
          example: Ferguson
        nameSuffix:
          description: 'The individual''s name suffix, for example, "Jr" or "Sr".'
          type: string
          example: ''
        direction:
          description: The direction used to render the individual's name.
          type: string
          default: left-to-right
          enum:
            - left-to-right
            - right-to-left
        formalSalutation:
          description: 'The individual''s formal salutation, for example, "Mr William Smith".'
          type: string
          example: Mr Robert Ferguson
        informalSalutation:
          description: 'The individual''s informal salutation, for example, "Bill".'
          type: string
          example: Rob
        nameType:
          description: The name type.
          type: string
          default: Principal Name
          enum:
            - Alias
            - Principal Name
        fromDate:
          description: 'The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
          readOnly: true
          type: string
          example: '1979-01-13T09:05:06+10:00'
        toDate:
          description: 'The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
          readOnly: true
          type: string
          example: ''
    individual:
      description: The Individual resource.
      type: object
      required:
        - dateOfBirth
        - placeOfBirth
      properties:
        id:
          description: The party's unique identifier.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/partyId'
        dateOfBirth:
          description: 'The individual''s date of birth, for example, `1979-01-13` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).'
          type: string
          example: '1979-01-13'
        placeOfBirth:
          description: 'The individual''s place of birth, for example, `Tamworth`.'
          type: string
          example: Tamworth
        gender:
          description: The individual's gender.
          type: string
          default: Male
          enum:
            - Female
            - Male
            - Not Applicable
            - Not Known
        names:
          type: array
          items:
            $ref: '#/components/schemas/individual-name'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/individual-address'
        electronicAddresses:
          type: array
          items:
            $ref: '#/components/schemas/electronic-address'
        fromDate:
          description: 'The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
          readOnly: true
          type: string
          example: '1979-01-13T09:05:06+10:00'
        toDate:
          description: 'The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
          readOnly: true
          type: string
          example: ''
    organisation-name:
      description: The Organisation Name resource.
      type: object
      properties:
        id:
          description: The resource's unique identifier.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/resourceId'
        name:
          description: The organisation's name.
          type: string
          example: 321 Technology Ventures
        fromDate:
          description: 'The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
          readOnly: true
          type: string
          example: '1928-03-03T09:05:06+10:00'
        toDate:
          description: 'The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
          readOnly: true
          type: string
          example: ''
    organisation:
      description: The Organisation resource.
      type: object
      required:
        - legalEntityType
        - establishmentDate
      properties:
        id:
          description: The party's unique identifier.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/partyId'
        legalEntityType:
          description: The organisation's legal entity type.
          type: string
          default: Company
          enum:
            - Company
            - Partnership
            - Trust
            - Joint Venture
        establishmentDate:
          description: 'The organisation''s establishment date, for example, `1928-03-03` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).'
          type: string
          example: '1928-03-03'
        registeredIdentifiers:
          type: array
          items:
            $ref: '#/components/schemas/registered-identifier'
        names:
          type: array
          items:
            $ref: '#/components/schemas/organisation-name'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/organisation-address'
        electronicAddresses:
          type: array
          items:
            $ref: '#/components/schemas/electronic-address'
        fromDate:
          description: 'The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
          readOnly: true
          type: string
          example: '1979-01-13T09:05:06+10:00'
        toDate:
          description: 'The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
          readOnly: true
          type: string
          example: ''
    party-role:
      description: The Party Role resource.
      type: object
      required:
        - relatedPartyId
        - relationshipType
      properties:
        id:
          description: The resource's unique identifier.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/roleId'
        partyRoleType:
          description: The party's role type.
          type: string
          default: Employee
          enum:
            - Director
            - Employee
            - Member
            - Partner
        relatedPartyId:
          description: The related party's unique identifier.
          allOf:
            - $ref: '#/components/schemas/partyId'
        relatedPartyRoleType:
          description: The related party's role type.
          type: string
          default: Employer
          enum:
            - Accountant
            - Auditor
            - Employer
        relationshipType:
          description: The relationship type.
          type: string
          default: Employment
          enum:
            - Commerce
            - Employment
            - Membership
            - Partnership
        fromDate:
          description: 'The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
          readOnly: true
          type: string
          example: '2016-01-13T09:05:06+10:00'
        toDate:
          description: 'The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
          readOnly: true
          type: string
          example: ''
    registered-identifier:
      description: The Registered Identifier resource.
      type: object
      properties:
        id:
          description: The resource's unique identifier.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/resourceId'
        identifier:
          description: The registered identifier.
          type: string
          example: '123456789'
        identifierType:
          description: The registered identifier type.
          type: string
          default: ACN
          enum:
            - ACN
            - ABN
        fromDate:
          description: 'The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
          readOnly: true
          type: string
          example: '1979-01-13T09:05:06+10:00'
        toDate:
          description: 'The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
          readOnly: true
          type: string
          example: ''
    business-name:
      description: The Business Name resource.
      type: object
      properties:
        id:
          description: The resource's unique identifier.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/resourceId'
        name:
          description: The business name.
          type: string
          example: XYZ Technology Ventures
        lifecycleState:
          description: The business name's lifecycle state.
          type: string
          default: Pending Approval
          enum:
            - Approved
            - Expired
            - Issued
            - Pending Approval
            - Suspended
        fromDate:
          description: 'The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
          readOnly: true
          type: string
          example: '1979-01-13T09:05:06+10:00'
        toDate:
          description: 'The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
          readOnly: true
          type: string
          example: ''
    license:
      description: The License resource.
      type: object
      properties:
        id:
          description: The resource's unique identifier.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/resourceId'
        licenseType:
          description: The license type.
          type: string
          default: Australian Financial Services License
          enum:
            - Australian Financial Services License
            - License 2B
        lifecycleState:
          description: The business name's lifecycle state.
          type: string
          default: Pending Approval
          enum:
            - Approved
            - Expired
            - Issued
            - Pending Approval
            - Suspended
        fromDate:
          description: 'The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
          readOnly: true
          type: string
          example: '1979-01-13T09:05:06+10:00'
        toDate:
          description: 'The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).'
          readOnly: true
          type: string
          example: ''
    error-details:
      type: object
      properties:
        code:
          description: The error code.
          type: string
          example: NullValue
        target:
          description: The error target.
          type: string
          example: familyName
        message:
          description: The error message.
          type: string
          example: Family name must not be null
    failed-precondition:
      type: object
      properties:
        code:
          description: The error code.
          type: string
          example: '400'
        message:
          description: The error message.
          type: string
          example: Request can not be executed in the current system state
        status:
          description: The error status.
          type: string
          example: FAILED_PRECONDITION
        details:
          type: array
          items:
            $ref: '#/components/schemas/error-details'
    invalid-argument:
      type: object
      properties:
        code:
          description: The error code.
          type: string
          example: '400'
        message:
          description: The error message.
          type: string
          example: The client specified an invalid argument
        status:
          description: The error status.
          type: string
          example: INVALID_ARGUMENT
        details:
          type: array
          items:
            $ref: '#/components/schemas/error-details'
    not-found:
      type: object
      properties:
        code:
          description: The error code.
          type: string
          example: '404'
        message:
          description: The error message.
          type: string
          example: The specified resource was not found
        status:
          description: The error status.
          type: string
          example: NOT_FOUND
        details:
          type: array
          items:
            $ref: '#/components/schemas/error-details'
    permission-denied:
      type: object
      properties:
        code:
          description: The error code.
          type: string
          example: '403'
        message:
          description: The error message.
          type: string
          example: The client does not have sufficient permission
        status:
          description: The error status.
          type: string
          example: PERMISSION_DENIED
        details:
          type: array
          items:
            $ref: '#/components/schemas/error-details'
    unauthorized:
      type: object
      properties:
        code:
          description: The error code.
          type: string
          example: '401'
        message:
          description: The error message.
          type: string
          example: 'Request not authorized due to missing, invalid, or expired token'
        status:
          description: The error status.
          type: string
          example: UNAUTHORIZED
        details:
          $ref: '#/components/schemas/error-details'
    addressId:
      allOf:
        - $ref: '#/components/schemas/resourceId'
        - type: number
        - example: 101
    partyId:
      allOf:
        - $ref: '#/components/schemas/resourceId'
        - type: number
        - example: 101
    resourceId:
      type: number
      description: The resource ID.
      example: 101
    roleId:
      allOf:
        - $ref: '#/components/schemas/resourceId'
        - type: number
        - example: 101
  responses:
    NotFound:
      description: The specified resource was not found
      schema:
        $ref: '#/components/schemas/not-found'
    Unauthorized:
      description: 'Request not authorised due to missing, invalid, or expired token'
      schema:
        $ref: '#/components/schemas/unauthorized'
paths:
  /individuals:
    get:
      summary: Retrieve a list of individuals
      description: |
        Retrieve a list of individuals
      responses:
        '200':
          description: A list of individuals was retrieved successfully
          headers:
            Link:
              description: |
                Information about pagination is provided in the [Link](https://tools.ietf.org/html/rfc5988#page-6) header.
                For example:

                    Link: <https://localhost:3001/api/individuals?page=2>; rel="next",
                          <https://localhost:3001/api/individuals?page=34>; rel="last"

                `rel="next"` states that the next page is `page=2`.
                 This makes sense, since by default, all paginated queries start at page `1`. `rel="last"` provides
                 some more information, stating that the last page of results is on `page 34`.
                 Accordingly, we have 33 more pages of information that we can consume.
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/individual'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        security:
          - oauth: [ individual:read ]
